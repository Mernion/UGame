cmake_minimum_required (VERSION 3.18)

project(UGame)

set(UGAME_ROOT
	"Source/UGame.h"
)

set(UGAME_SOURCE_RENDERER
	"Source/Renderer/GraphicsContext.h"
	"Source/Renderer/Shader.h"
	"Source/Renderer/Shader.cpp"
	"Source/Renderer/VertexBuffer.h"
	"Source/Renderer/VertexBuffer.cpp"
	"Source/Renderer/IndexBuffer.h"
	"Source/Renderer/IndexBuffer.cpp"
	"Source/Renderer/Renderer.h"
	"Source/Renderer/Renderer.cpp"
	"Source/Renderer/VertexArray.h"
	"Source/Renderer/VertexArray.cpp"
	"Source/Renderer/BufferLayout.h"
	"Source/Renderer/BufferLayout.cpp"
	"Source/Renderer/RendererAPI.h"
	"Source/Renderer/RendererAPI.cpp"
	"Source/Renderer/RenderCommand.h"
	"Source/Renderer/RenderCommand.cpp"
	"Source/Renderer/OrthographicCamera.h"
	"Source/Renderer/OrthographicCamera.cpp"
	"Source/Renderer/Texture.h"
	"Source/Renderer/Texture.cpp"
	"Source/Renderer/ShaderLibrary.h"
	"Source/Renderer/ShaderLibrary.cpp"
)

set(UGAME_SOURCE_PLATFORM_OPENGL
	"Source/Platform/OpenGL/OpenGLContext.cpp"
	"Source/Platform/OpenGL/OpenGLContext.h"
	"Source/Platform/OpenGL/OpenGLShader.h"
	"Source/Platform/OpenGL/OpenGLShader.cpp"
	"Source/Platform/OpenGL/OpenGLVertexBuffer.h"
	"Source/Platform/OpenGL/OpenGLVertexBuffer.cpp"
	"Source/Platform/OpenGL/OpenGLIndexBuffer.h"
	"Source/Platform/OpenGL/OpenGLIndexBuffer.cpp"
	"Source/Platform/OpenGL/OpenGLVertexArray.h"
	"Source/Platform/OpenGL/OpenGLVertexArray.cpp"
	"Source/Platform/OpenGL/OpenGLBufferLayout.h"
	"Source/Platform/OpenGL/OpenGLBufferLayout.cpp"
	"Source/Platform/OpenGL/OpenGLRendererAPI.h"
	"Source/Platform/OpenGL/OpenGLRendererAPI.cpp"
	"Source/Platform/OpenGL/OpenGLTexture.h"
	"Source/Platform/OpenGL/OpenGLTexture.cpp"
	"Source/Platform/OpenGL/LinuxWindow.h"
	"Source/Platform/OpenGL/LinuxWindow.cpp"
)

set(UGAME_SOURCE_PLATFORM_WINDOWS
	"Source/Platform/Windows/WindowsWindow.cpp"
	"Source/Platform/Windows/WindowsWindow.h"
	"Source/Platform/Windows/WindowsInput.h"
	"Source/Platform/Windows/WindowsInput.cpp"
)

set(UGAME_SOURCE_EVENTS
	"Source/UGame/Events/ApplicationEvent.h"
	"Source/UGame/Events/Event.h"
	"Source/UGame/Events/KeyEvent.h"
	"Source/UGame/Events/MouseEvent.h"
	"Source/UGame/Events/MouseButtonCodes.h"
	"Source/UGame/Events/KeyCodes.h"
)

set(UGAME_SOURCE_IMGUI
	"Source/UGame/ImGui/ImGuiLayer.cpp"
	"Source/UGame/ImGui/ImGuiLayer.h"
)

set(UGAME_SOURCE_IMGUI_OPENGL
	"Source/UGame/ImGui/OpenGL/imgui_impl_opengl3.h"
	"Source/UGame/ImGui/OpenGL/imgui_impl_opengl3.cpp"
	"Source/UGame/ImGui/OpenGL/imgui_impl_glfw.cpp"
	"Source/UGame/ImGui/OpenGL/imgui_impl_glfw.h"
	"Source/UGame/ImGui/OpenGL/OpenGLImGuiLayer.h"
	"Source/UGame/ImGui/OpenGL/OpenGLImGuiLayer.cpp"
)

set(UGAME_SOURCE_IMGUI_DIRECTX
	"Source/UGame/ImGui/DirectX/imgui_impl_dx11.h"
	"Source/UGame/ImGui/DirectX/imgui_impl_dx11.cpp"
	"Source/UGame/ImGui/DirectX/imgui_impl_win32.cpp"
	"Source/UGame/ImGui/DirectX/imgui_impl_win32.h"
	"Source/UGame/ImGui/DirectX/DirectXImGuiLayer.h"
	"Source/UGame/ImGui/DirectX/DirectXImGuiLayer.cpp"
)

set(UGAME_SOURCE
	"Source/UGame/Application.cpp"
	"Source/UGame/Application.h"
	"Source/UGame/Core.h"
	"Source/UGame/EntryPoint.h"
	"Source/UGame/Log.cpp"
	"Source/UGame/Log.h"
	"Source/UGame/Window.cpp"
	"Source/UGame/Window.h"
	"Source/UGame/Layer.h"
	"Source/UGame/Layer.cpp"
	"Source/UGame/LayerStack.cpp"
	"Source/UGame/LayerStack.h"
	"Source/UGame/Input.h"
	"Source/UGame/OrthographicCameraController.h"
	"Source/UGame/OrthographicCameraController.cpp"
)

set(UGAME_SOURCE_CORE
	"Source/Core/Timestep.h"
)

set(UGAME_SOURCE_THIRDPARTY
	"ThirdParty/stb/stb_image.h"
	"ThirdParty/stb/stb_image.cpp"
)


set(UGAME_SRC 	${UGAME_SOURCE} 
		${UGAME_ROOT} 
		${UGAME_SOURCE_EVENTS} 
		${UGAME_SOURCE_PLATFORM_OPENGL}	
		${UGAME_SOURCE_PLATFORM_WINDOWS}
		${UGAME_SOURCE_RENDERER}
		${UGAME_SOURCE_IMGUI}
		${UGAME_SOURCE_IMGUI_OPENGL}
		${UGAME_SOURCE_IMGUI_DIRECTX}
		${UGAME_SOURCE_CORE}
		${UGAME_SOURCE_THIRDPARTY}
)

add_library(UGame SHARED ${UGAME_SRC})

target_compile_features(UGame PRIVATE cxx_std_17)

set_target_properties(UGame PROPERTIES UNITY_BUILD ON)

target_include_directories(UGame PUBLIC Source)

target_link_libraries(UGame PUBLIC spdlog_header_only)
target_link_libraries(UGame PUBLIC glfw)
target_link_libraries(UGame PUBLIC opengl32)
target_link_libraries(UGame PUBLIC GLAD)
target_link_libraries(UGame PUBLIC ImGui)
target_link_libraries(UGame PUBLIC glm)
  
# Create named folders for the sources within the .vcproj
# Empty name lists them directly under the .vcproj
source_group("" FILES ${UGAME_ROOT})
source_group("Source Files" FILES ${UGAME_SOURCE})
source_group("Source Files/Events" FILES ${UGAME_SOURCE_EVENTS})
source_group("Source Files/Platform/Windows" FILES ${UGAME_SOURCE_PLATFORM_WINDOWS})
source_group("Source Files/Platform/OpenGL" FILES ${UGAME_SOURCE_PLATFORM_OPENGL})
source_group("Source Files/Renderer" FILES ${UGAME_SOURCE_RENDERER})
source_group("Source Files/ImGui" FILES ${UGAME_SOURCE_IMGUI})
source_group("Source Files/Core" FILES ${UGAME_SOURCE_CORE})
source_group("Source Files/ThirdParty" FILES ${UGAME_SOURCE_THIRDPARTY})
source_group("Source Files/ImGui/OpenGL" FILES ${UGAME_SOURCE_IMGUI_OPENGL})
source_group("Source Files/ImGui/DirectX" FILES ${UGAME_SOURCE_IMGUI_DIRECTX})

if (WIN32)
      target_compile_definitions(UGame PRIVATE UG_BUILD_DLL=1 UG_PLATFORM_WINDOWS=1) 
	  target_link_libraries(UGame PUBLIC d3d11)
endif (WIN32)

target_compile_definitions(UGame PRIVATE UNICODE=1 _UNICODE=1 GLFW_INCLUDE_NONE=1)

add_subdirectory(ThirdParty/spdlog)
add_subdirectory(ThirdParty/GLFW)
add_subdirectory(ThirdParty/GLAD)
add_subdirectory(ThirdParty/ImGui)
add_subdirectory(ThirdParty/glm)


 