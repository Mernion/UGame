cmake_minimum_required (VERSION 3.18)

project(UGame)

set(UGAME_ROOT
	"Source/UGame.h"
)

set(UGAME_SOURCE_PLATFORM "")

set(UGAME_SOURCE_PLATFORM_WINDOWS 
      	"Source/Platform/Windows/WindowsWindow.cpp"
      	"Source/Platform/Windows/WindowsWindow.h"
	"Source/Platform/Windows/WindowsInput.h"
	"Source/Platform/Windows/WindowsInput.cpp"
)

set(UGAME_SOURCE_PLATFORM_OPENGL 
	"Source/Platform/OpenGL/ImGuiOpenGLRenderer.cpp"
	"Source/Platform/OpenGL/ImGuiOpenGLRenderer.h"
)

set(UGAME_SOURCE_EVENTS
	"Source/UGame/Events/ApplicationEvent.h"
	"Source/UGame/Events/Event.h"
	"Source/UGame/Events/KeyEvent.h"
	"Source/UGame/Events/MouseEvent.h"
	"Source/UGame/Events/MouseButtonCodes.h"
	"Source/UGame/Events/KeyCodes.h"
)

set(UGAME_SOURCE_IMGUI
	"Source/UGame/ImGui/ImGuiLayer.cpp"
	"Source/UGame/ImGui/ImGuiLayer.h"
)

set(UGAME_SOURCE
      	"Source/UGame/Application.cpp"
      	"Source/UGame/Application.h"
      	"Source/UGame/Core.h"
      	"Source/UGame/EntryPoint.h"
      	"Source/UGame/Log.cpp"
      	"Source/UGame/Log.h"
	"Source/UGame/Window.h"
	"Source/UGame/Layer.h"
	"Source/UGame/Layer.cpp"
	"Source/UGame/LayerStack.cpp"
	"Source/UGame/LayerStack.h"
	"Source/UGame/Input.h"
)

set(UGAME_SRC 	${UGAME_SOURCE} 
		${UGAME_ROOT} 
		${UGAME_SOURCE_EVENTS} 
		${UGAME_SOURCE_PLATFORM} 
		${UGAME_SOURCE_PLATFORM_WINDOWS}
		${UGAME_SOURCE_IMGUI}
		${UGAME_SOURCE_PLATFORM_OPENGL}
)

add_library(UGame SHARED ${UGAME_SRC})

target_compile_features(UGame PRIVATE cxx_std_17)

set_target_properties(UGame PROPERTIES UNITY_BUILD ON)

target_include_directories(UGame PUBLIC Source)

target_link_libraries(UGame PUBLIC spdlog_header_only)
target_link_libraries(UGame PUBLIC glfw)
target_link_libraries(UGame PUBLIC opengl32)
target_link_libraries(UGame PUBLIC GLAD)
target_link_libraries(UGame PUBLIC ImGui)
target_link_libraries(UGame PUBLIC glm)
  
# Create named folders for the sources within the .vcproj
# Empty name lists them directly under the .vcproj
source_group("" FILES ${UGAME_ROOT})
source_group("Source Files" FILES ${UGAME_SOURCE})
source_group("Source Files/Events" FILES ${UGAME_SOURCE_EVENTS})
source_group("Source Files/Platform" FILES ${UGAME_SOURCE_PLATFORM})
source_group("Source Files/Platform/Windows" FILES ${UGAME_SOURCE_PLATFORM_WINDOWS})
source_group("Source Files/ImGui" FILES ${UGAME_SOURCE_IMGUI})
source_group("Source Files/Platform/OpenGL" FILES ${UGAME_SOURCE_PLATFORM_OPENGL})

if (WIN32)
      target_compile_definitions(UGame PRIVATE UG_BUILD_DLL=1 UG_PLATFORM_WINDOWS=1) 
endif (WIN32)

target_compile_definitions(UGame PRIVATE _UNICODE=1 GLFW_INCLUDE_NONE=1)

add_subdirectory(ThirdParty/spdlog)
add_subdirectory(ThirdParty/GLFW)
add_subdirectory(ThirdParty/GLAD)
add_subdirectory(ThirdParty/ImGui)
add_subdirectory(ThirdParty/glm)


 